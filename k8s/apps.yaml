apiVersion: v1
kind: ServiceAccount
metadata: { name: users-sa, namespace: bank }
---
apiVersion: v1
kind: ServiceAccount
metadata: { name: orders-sa, namespace: bank }
---
apiVersion: v1
kind: ServiceAccount
metadata: { name: payments-sa, namespace: bank }
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: users, namespace: bank, labels: { app: users } }
spec:
  replicas: 1
  selector: { matchLabels: { app: users } }
  template:
    metadata: { labels: { app: users } }
    spec:
      serviceAccountName: users-sa
      containers:
        - name: app
          image: ealen/echo-server:latest
          ports: [{ containerPort: 8080 }]
          env:
            - { name: LOGS, value: "true" }
            - { name: PORT, value: "8080" }   # echo listens on 8080
---
apiVersion: v1
kind: Service
metadata: { name: users, namespace: bank }
spec:
  selector: { app: users }
  ports: [{ name: http, port: 80, targetPort: 8080 }]
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: orders, namespace: bank, labels: { app: orders } }
spec:
  replicas: 1
  selector: { matchLabels: { app: orders } }
  template:
    metadata: { labels: { app: orders } }
    spec:
      serviceAccountName: orders-sa
      containers:
        - name: app
          image: ealen/echo-server:latest
          ports: [{ containerPort: 8080 }]
          env:
            - { name: LOGS, value: "true" }
            - { name: PORT, value: "8080" }
---
apiVersion: v1
kind: Service
metadata: { name: orders, namespace: bank }
spec:
  selector: { app: orders }
  ports: [{ name: http, port: 80, targetPort: 8080 }]
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: payments, namespace: bank, labels: { app: payments } }
spec:
  replicas: 1
  selector: { matchLabels: { app: payments } }
  template:
    metadata: { labels: { app: payments } }
    spec:
      serviceAccountName: payments-sa
      containers:
        - name: app
          image: ealen/echo-server:latest
          ports: [{ containerPort: 8080 }]
          env:
            - { name: LOGS, value: "true" }
            - { name: PORT, value: "8080" }
---
apiVersion: v1
kind: Service
metadata: { name: payments, namespace: bank }
spec:
  selector: { app: payments }
  ports: [{ name: http, port: 80, targetPort: 8080 }]
